#!/usr/bin/zsh

alias e=$EDITOR
alias j=jobs
alias h=history
function m { perl -MCPAN -e "print CPAN::Shell->format_result(q{Module}, q{$*})" }
alias t='Build test --test_files'
alias up='tar -zxvf'

alias s='git status'
alias d='git diff'
alias ds='git diff --staged'
alias l='git lg'
alias la='git lg --all'
alias a='git add -p'
alias dup='git dup'
alias gd='git checkout develop'

function git_ticket () {
    git rev-parse --abbrev-ref HEAD |
	perl -ne 'print m{(?:^|/)([A-Z][A-Z0-9]+-\d+)} ? qq{$1} : q{}'
}
function c () { x=$(git_ticket); git commit -m "$x $1" }

alias mac2unix='perl -pi -e "tr/\r/\n/"'
alias dos2unix='perl -pi -e "tr/\r//d"'
alias javastring='mac2unix | perl -pe '"'"'BEGIN{print q/"/}; s/"/\\"/g; s/\n/\\n" +\n"/g; END {print q/"/}'"'"
alias findproc='ps auxww|grep'
alias test1='make test TEST_FILES=\!:1 TEST_VERBOSE=1'
alias look_storable='perl -d -MStorable -e '"'"'$x = retrieve(shift)'"'"
alias fullword='grep ^\!*$ /usr/share/dict/web2'
alias force='perl -le "sleep 1 while system @ARGV"'
alias pbedit='pbpaste > /tmp/pb; e /tmp/pb; pbcopy < /tmp/pb'

jira () {
    ticket=${1:-$(git_ticket)}
    jira=${JIRA_URL:-http://example.com/jira}
    # echo $bb/browse/$ticket
    open $jira/browse/$ticket
}

alias dr='docker run -it --rm'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias cdt='cd ~/bin/test'
alias cdm='cd ~/src/modules'
alias cdd='cd ~/Downloads'
alias cds='cd ~/src'
alias cdg='cd ~/Documents/SIA'

alias ls='ls -F'
function lsl { ls -al $* | less -EX }
alias mmv='noglob zmv -W'

alias cpan='perl -MCPAN -e shell'
alias pert='perl -a -F/\\t/'
alias R='R_HISTSIZE=10000 R --no-save --no-restore-data --quiet'

hcat  () { hdfs dfs -cat $1 }
hzcat () { hdfs dfs -cat $1 | bzcat }

if [[ "$(uname -s | cut -c 1-6)" == "CYGWIN" ]]; then
    alias open=cygstart
    alias pbcopy=putclip
    alias pbpaste=getclip
elif [[ "$(uname)" == "Darwin" ]]; then
    # Already have it
else
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
fi

rchangelog() {
    echo "Version XX  " $(date)
    echo "---------------------------"
    git changelog --graph $1.. | cat
}

aws_address_cluster () {
    while true
    do
	aws emr describe-cluster --cluster-id $1 | jq -e '.Cluster.MasterPublicDnsName | values | "http://" + . + ":8787"' && break
	echo "Waiting..."
	sleep 1
    done
}

aws_address_ec2 () {
    while true
    do
	aws ec2 describe-instances --filters Name=tag:Name,Values=$1 | jq '.Reservations[0].Instances[0].PublicDnsName | values' && break
	echo "Waiting..."
	sleep 1
    done
}


if [[ $OSTYPE == darwin* ]]; then
   alias top='top -u'
   alias E='open -a Emacs'
   alias showdots='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
   alias hidedots='defaults write com.apple.finder AppleShowAllFiles NO;  killall Finder /System/Library/CoreServices/Finder.app'

   brewperms () {
       BREW=/usr/local
       for f ( $BREW $BREW/bin $BREW/share $BREW/share/man $BREW/share/man/man1 ) do
	   sudo chgrp admin $f
	   sudo chmod g+w $f
       done
   }
fi
